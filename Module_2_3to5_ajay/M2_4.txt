import os
import subprocess
import ply.lex as lex
import ply.yacc as yacc
import datetime
import urllib
from urllib.request import Request, urlopen

news={}



###DEFINING TOKENS###
tokens = ('BEGIN','CONTENT','OPEN_UL','CLOSE_UL','OPEN_LI','CLOSE_LI','OPEN_H3','CLOSE_H3','OPEN_H2','CLOSE_H2','OPEN_P','CLOSE_P','END')
t_ignore = ' \t'
#####################
# t_OPEN_UL= r'<ul.*?>'
# t_CLOSE_UL= r'</ul.*?>'
# t_OPEN_LI= r'<li.*?>'
# t_CLOSE_LI= r'</li.*?>'
# t_OPEN_H3= r'<h3.*?>'
# t_CLOSE_H3= r'</h3.*?>'
t_OPEN_H2= r'<h2.*?>'
t_CLOSE_H2= r'</h2.*?>'
# t_OPEN_P= r'<p.*?>'
# t_CLOSE_P= r'</p.*?>'
t_END=r'<h2><span.class="mw-headline".id="Notes">(.+?)<\/span><span.class="mw-editsection"><span.class="mw-editsection-bracket">\[<\/span><a.href="(.+?)".title="Edit.section:\s*Notes"><span>edit<\/span><\/a><span.class="mw-editsection-bracket">\]<\/span><\/span><\/h2>'
###############Tokenizer Rules################
def t_BEGIN(t):
    r'<h2><span.class="mw-headline".id="January_2020">January.2020</span>'
    return t

def t_CONTENT(t):
    r'[A-Za-z0-9, .,\'-0-9/():â€“;]+'
    return t

def t_ignore_TAGS(t):
    r'<img.*?>|<style.*?>.*?</style>|<script.*?>.*?</script>|<sup.*?>.*?</sup>|<span.*?>|</span>|<a.href.*?>|</a>|<span.class="mw-editsection">.*?]</span></span>|<figure.*?>|</figure>|<i>|</i>|<figcaption.*?>|</figcaption>|<div.role.*?>|</div>|<link.*?>|<p>|</p>'
    pass


def t_error(t):
    t.lexer.skip(1)
####################################################################################################################################################################################################
def p_start(p):
    '''start : table'''
    p[0] = p[1]

def p_skiptag(p):
    '''skiptag : CONTENT skiptag
               | empty'''

def p_table(p):
    '''table : BEGIN skiptag CLOSE_H2 data'''
    

def p_data(p):
    '''data : skiptag OPEN_H2 CONTENT content CLOSE_H2 content data            
            | END
            | skiptag'''
    # global news
    # if(len(p)!=2):
    #     news[p[2]]=p[7]
    # print(len(p))
    if(len(p)==8):
        print(p[6])


def p_empty(p):
    '''empty :'''
    pass

def p_content(p):
    '''content : CONTENT content
               | empty'''
    if len(p) == 3:
        p[0] = p[1] + p[2]
    else:
        p[0] = ""

    # print(p[0])


def p_error(p):
    pass


###################DRIVER CODE################################

def main():
    url = f'https://en.wikipedia.org/wiki/Timeline_of_the_COVID-19_pandemic_in_Australia_(2020)'
    req = Request(url,headers ={'User-Agent':'Mozilla/5.0'})
    webpage = urlopen(req).read()
    mydata = webpage.decode("utf8")
    f=open('webpage.html','w',encoding="utf-8")
    f.write(mydata)
    f.close

    file_obj = open('webpage.html', 'r', encoding="utf-8")
    data = file_obj.read()
    lexer = lex.lex()
    lexer.input(data)
    with open ("abc.txt",'w',encoding='utf-8') as h:
        for tok in lexer:
            #print (tok)
            h.write(str(tok)+'\n')
    parser = yacc.yacc()
    parser.parse(data)
    file_obj.close()

if __name__ == '__main__':
    main()